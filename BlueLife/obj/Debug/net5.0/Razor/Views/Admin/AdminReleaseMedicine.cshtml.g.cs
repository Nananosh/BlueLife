#pragma checksum "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "facfbb82681794ff3567298a7757618af33e30a3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_AdminReleaseMedicine), @"mvc.1.0.view", @"/Views/Admin/AdminReleaseMedicine.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\_ViewImports.cshtml"
using BlueLife;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\_ViewImports.cshtml"
using BlueLife.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"facfbb82681794ff3567298a7757618af33e30a3", @"/Views/Admin/AdminReleaseMedicine.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1e855bbce0c3993d68d6b3cb5e7f77e92c021fa7", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_AdminReleaseMedicine : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
  
    Layout = "_AdminLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "facfbb82681794ff3567298a7757618af33e30a33325", async() => {
                WriteLiteral("\r\n<br/><br/><br/>\r\n<div id=\"example\">\r\n    <div id=\"grid\"></div>\r\n    <script>\r\n        $(document).ready(function() {\r\n            $(\"#grid\").kendoGrid({\r\n                dataSource: {\r\n                    transport: {\r\n                        read: \"");
#nullable restore
#line 14 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                          Write(Url.Action("GetAllReleaseMedicine", "Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\r\n                        update: {\r\n                            url: \"");
#nullable restore
#line 16 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                             Write(Url.Action("EditReleaseMedicine","Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\r\n                            dataType: \"json\",\r\n                            type: \"POST\"\r\n                        },\r\n                        create:{\r\n                            url: \"");
#nullable restore
#line 21 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                             Write(Url.Action("AddReleaseMedicine","Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\r\n                            dataType: \"json\",\r\n                            type: \"POST\"  \r\n                        },\r\n                        destroy: {\r\n                            url: \"");
#nullable restore
#line 26 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                             Write(Url.Action("DeleteReleaseMedicine","Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                            dataType: ""json"",
                            type: ""DELETE""
                        },
                        parameterMap: function(options, operation) {
                          if (operation === ""update"" || operation === ""create"") {
                               options.releaseDate = kendo.toString(options.releaseDate, ""dd/MM/yyyy"");
                               options.expirationDate = kendo.toString(options.expirationDate, ""dd/MM/yyyy"");
                          }
                          return options;
                        }
                    },
                    schema: {
                        model: {
                            id: ""Id"",
                            fields: {
                                Id: { editable: false, from: ""id"", type: ""number"" },
                                Medicine: { from: ""medicine"", validation: {required: true} }, 
                                MedicineId: {from: ""medicineId"", validation: {requir");
                WriteLiteral(@"ed: true} },
                                Manufacturer: { from: ""manufacturer"", validation: {required: true} },
                                ManufacturerId: {from: ""manufacturerId"", validation: {required: true} }, 
                                Image: { from: ""image"", validation: {required: true} },
                                Description: {from: ""description"", validation: {required: true} }, 
                                ReleaseDate: { from: ""releaseDate"", type: ""date"", validation: {required: true }, format:""{0:dd/MM/yyyy}""},
                                ExpirationDate: { from: ""expirationDate"", type: ""date"", validation: {required: true }, format:""{0:dd/MM/yyyy}""}
                            }
                        }
                    },
                    pageSize: 20,
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                format: ""{dd/MM/yyyy}"",
                parse");
                WriteLiteral(@"Formats: ""{dd/mm/yyyy}"",
                height: 550,
                editable: {
                    mode: ""popup"",
                    window: {
                        scrollable: false,
                        resizable: false,
                    }
                },
                // filterable: true,
                // sortable: true,
                pageable: true,
                timezone: ""Europe/Minsk"",
                toolbar: [
                    {name: ""create""}
                ],
                columns: [
                    {
                        field:""Id"",
                        filterable: false
                    },
                    {
                        field: ""Medicine.fullMedicine"",
                        title: ""Препарат"",
                        editor: medicineEditor
                    },
                    {
                        field: ""Manufacturer.manufacturer"",
                        title: ""Производитель"",
                      ");
                WriteLiteral(@"  editor: manufacturerEditor
                    }, 
                    {
                        field: ""Image"",
                        title: ""Картинка"",
                    },
                    {
                        field: ""Description"",
                        title: ""Описание""
                    },
                    {
                        field: ""ReleaseDate"",
                        title: ""Дата выпуска"",
                        format:""{0:dd/MM/yyyy}""
                    }, 
                    {
                        field: ""ExpirationDate"",
                        title: ""Срок годности"",
                        format:""{0:dd/MM/yyyy}""
                    },
                    {
                        command: ""edit"", 
                    },
                    {
                        command: ""destroy""
                    }
                ]
            });
        });
        
        function manufacturerEditor(container, options) {
            $('");
                WriteLiteral(@"<input required name=""ManufacturerId"">')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: ""manufacturer"",
                    dataValueField: ""id"",
                    height: 500,
                    dataSource: {
                        transport: {
                            read: {
                                url: """);
#nullable restore
#line 129 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                                 Write(Url.Action("GetAllMedicineManufacturer", "Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                                dataType: ""json"",
                                cache: false
                            }
                        }
                    }
                });
        }
        
        function medicineEditor(container, options) {
            $('<input required name=""MedicineId"">')
                .appendTo(container)
                .kendoDropDownList({
                    dataTextField: ""fullMedicine"",
                    dataValueField: ""id"",
                    height: 500,
                    dataSource: {
                        transport: {
                            read: {
                                url: """);
#nullable restore
#line 148 "C:\Users\nanan\RiderProjects\BlueLife\BlueLife\Views\Admin\AdminReleaseMedicine.cshtml"
                                 Write(Url.Action("GetAllMedicine", "Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\",\r\n                                dataType: \"json\",\r\n                                cache: false\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    </script>\r\n</div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
